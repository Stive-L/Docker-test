name: CI/CD DevOps 2025

on:
  push:
    branches: [main, develop]
  pull_request:

jobs:
  # -------- CI--------
  test-backend:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build and test with Maven
        working-directory: "./TP - Part 1/java-api/simpleapi"
        run: mvn -B clean verify

      - name: Analyze with SonarCloud
        working-directory: "./TP - Part 1/java-api/simpleapi"
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=Stive-L_Docker-test -Dsonar.organization=stive-l -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-push-docker-image:
    needs: test-backend
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: "./TP - Part 1/java-api"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build and push database
        uses: docker/build-push-action@v6
        with:
          context: "./TP - Part 1"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build and push httpd
        uses: docker/build-push-action@v6
        with:
          context: "./TP - Part 1/http-server"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest
          push: ${{ github.ref == 'refs/heads/main' }}

  # -------- CD --------
  deploy:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          python3 -m pip install --upgrade pip
          pip install "ansible>=9"

      - name: Install Ansible collections
        run: |
          ansible-galaxy collection install community.docker


      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

          
      - name: Add host to known_hosts
        run: |
          ssh-keyscan ${{ secrets.TARGET_HOST }} >> ~/.ssh/known_hosts

      - name: Run Ansible playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          cd ansible
          ansible-playbook -i inventories/setup.yml playbook.yml \
            -e "ansible_host=${{ secrets.TARGET_HOST }} ansible_user=${{ secrets.TARGET_USER }}"
